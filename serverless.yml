service: erc721validator-api
provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  iamRoleStatements:
  - Effect: Allow
    Action:
      - s3:PutObject
      - s3:PutObjectAcl
    Resource: "arn:aws:s3:::erc721validator/*" 
  stage: ${opt:stage, 'test'}
  environment:
    APP_ENV: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):APP_ENV}
    APP_SECRET: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):APP_SECRET}
    ETH_MAINNET_URL: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):ETH_MAINNET_URL}
    ETH_RINKEBY_URL: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):ETH_RINKEBY_URL}
    ETH_ROPSTEN_URL: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):ETH_ROPSTEN_URL}

plugins:
- serverless-domain-manager

custom:
  customDomain:
    domainName: ${file(./.serverless-env/${opt:stage, self:provider.stage, 'test'}.json):DOMAIN}
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateName: "erc721validator.org"
    autoDomain: true

functions:
  # Start Ethereum gateway.
  rest:
    handler: dist/scripts/lambda.handler
    events:
    - http:
        path: '{proxy+}'
        method: ANY
        cors:
          origin: '*'
    - http:
        path: '/'
        method: ANY
        cors:
          origin: '*'
    timeout: 30 # api gateway limit is 30
